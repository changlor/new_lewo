<?php
namespace Home\Controller;
use Think\Controller;
class StewardController extends Controller {
	public function __construct(){
		parent::__construct();
		if ( empty($_SESSION['steward_id'])) {
			$this->login();
			die();
		}
	}
    public function index(){
        $today = date("Y-m-d",time());//今天2016-08-19
        $yesterday = date("Y-m-d",strtotime($today." -1 day"));

        $today_total_money = getTotalMoney($today);//今日总金额：今日新签合同收入的总金额
        $yesterday_total_money = getTotalMoney($yesterday);//昨天总金额：昨天签合同收入的总金额
        $today_sign_count = getSignCount($today);//签约个数：今天签约的个数
        $JD_total_money = getJDMoney($today);//缴定金额：今天缴定金额
        //空房间
        $room_count = getRoomCount();//总房间数量
        $empty_room_count = getEmptyRoomCount();//空房间数量
        $percent_room = $empty_room_count / $room_count;
        $percent_room = $percent_room? ceil($percent_room*100) : 0;
        $this->assign("empty_room_count",$empty_room_count);
        $this->assign("percent_room",$percent_room);
        //空床位
        $bed_count = getBedCount();//总房间数量
        $empty_bed_count = getEmptyBedCount();//空房间数量
        $percent_bed = $empty_bed_count / $bed_count;
        $percent_bed = $percent_bed? ceil($percent_bed*100) : 0;
        $this->assign("empty_bed_count",$empty_bed_count);
        $this->assign("percent_bed",$percent_bed);
        $this->assign("today_total_money",$today_total_money);
        $this->assign("yesterday_total_money",$yesterday_total_money);
        $this->assign("today_sign_count",$today_sign_count);
        $this->assign("JD_total_money",$JD_total_money);
        $this->display("steward-index");
    }
    /**
     * [登录]
     **/
    public function login(){
    	if ( !empty($_POST) ) {
    		$where['username'] = I("post.userName");
            $where['password'] = md5(I("post.userPass"));
    		$Muser = M("admin_user");
    		$result = $Muser->where($where)->find();
    		if ( !is_null($result) ) {
                $_SESSION['steward_user'] = I("post.userName");
                $_SESSION['steward_id'] = $result['id'];
                $_SESSION['steward_nickname'] = $result['nickname'];
    			$this->success("登录成功",U("Home/Steward/index"),1);
    		} else {
    			$this->error("登录失败");
    		}
    	} else {
    		$this->display('login');
    	}
    }
    /**
     * [集中查表]
     **/
    public function checkbill(){
        $DHouses = D("houses");
        $houses = $DHouses->getHouseAndRoom($_SESSION['steward_id']);

        $MAmmeter = M("ammeter_house");
        foreach($houses AS $key=>$val){
            $where['house_id'] = $val['id'];
            $where['input_year'] = date("Y");
            $where['input_month'] = date("m");
            $where['status']  = 1;
            $result = $MAmmeter->where($where)->find();
            if ( !empty($result) ) {
                $houses[$key]['is_typein'] = true;
            } else {
                $houses[$key]['is_typein'] = false;
            }
        }
        $this->assign("houses", $houses);
        $this->assign("month",date("m"));
        $this->display("check-bill");
        $this->display("Steward/common/footer");
    }
    /**
     * [显示该房屋的水电气列表]
     **/
    public function show_ammeter(){
        $house_id = I("house_id");
        $DHouses = D("houses");
        $houses_code = $DHouses->getHouseCodeById($house_id);
        $year = date("Y");
        $month = date("m");
        $DAmmeter = D("ammeter_house");
        $DAmmeter->checkHouseAmmeterByDate($house_id,$year,$month);//检查当月是否生成水电气数据

        //检查该房源下的房间是否生成了当月的电表
        $DAmmeterRoom = D("ammeter_room");
        $room_list = $DHouses->getRoomList($houses_code);
        foreach( $room_list AS $key=>$val ){
            $DAmmeterRoom->checkRoomAmmeterByDate($val['id'],$house_id,$year,$month);
        }

        $ammter_list = $DAmmeter->getHouseAmmeterById($house_id);
        $this->assign('house_id',$house_id);
        $this->assign('house_code',$houses_code);
        $this->assign('ammter_list',$ammter_list);
        $this->display("show-ammeter");
        $this->display("Steward/common/footer");    
    }
    /**
    * [写入水电气]
    **/
    public function type_in(){
        if ( !empty($_POST) ) {
            $amme_id = I("amme_id");
            $DAmmeter = D("ammeter_house");
            $DAmmeterROOM = D("ammeter_room");
            $return = $DAmmeter->updateAmmeterById($amme_id,$_POST);
            foreach ( $_POST['roomD'] AS $key=>$val ) {
                $DAmmeterROOM->updateAmmeterRoomById($key,$val);
            }
            $this->success("保存成功",U('Home/Steward/checkbill'));

        } else {
            $amme_id = I("amme_id");
            $house_id = I("house_id");
            $input_year = I("input_year");
            $input_month = I("input_month");
            $DAmmeter = D("ammeter_house");
            $house_ammeter = $DAmmeter->getAmmeterById($amme_id);
            $this->assign("house_ammeter",$house_ammeter);
            $DAmmeterRoom = D("ammeter_room");
            $aRoom_list = $DAmmeterRoom->getAmmeterRoom($house_id,$input_year,$input_month);
            $this->assign("aRoom_list",$aRoom_list);
            $this->assign('amme_id',$amme_id);
            $this->display("type-in");
        }
    }

    /**
     * [入住--房屋列表]
     **/
    public function houses(){
        $DHouses = D("houses");
        $this->assign("houses",$DHouses->getHouseAndRoom($_SESSION['steward_id']));
        $this->display('houses');
        $this->display("Steward/common/footer");
    }
    /**
     * [入住-房间信息]
     **/
    public function roominfo(){
        $id = I("id");
        $DHouses = D('Houses');
        $info = $DHouses->getRoom($id);
        $otherRoom = $DHouses->getOtherRoom($info['house_code'],$id);
        $this->assign('otherRoom',$otherRoom);
        $this->assign('info',$info);
        $this->display('room-info');
    }
    /**
     * [入住-缴定]
     **/
    public function order(){
        if ( !empty($_POST) ) {
            $data['realname'] = I('post.realname');
            $data['password'] = md5("123456");
            $data['mobile'] = I('post.mobile');
            $data['email'] = I('post.email');
            $data['contact2'] = I('post.contact2');
            $data['card_no'] = I('post.idNo');
            $data['register_time'] = date("Y-m-d H:i:s",time());

            $Maccount = M("account");
            $result = $Maccount->where(array('mobile'=>$data['mobile']))->find();
            if ( $result == null ) {               
                $id = $Maccount->add($data); // 生成帐号后返回ID
            } else {
                $id = $result['id'];
            }
            if ( $id ) {
                //缴定后 插入到待办中
                $sch['room_id'] = I('post.id');
                $sch['money'] = I('post.money');
                $sch['account_id'] = $id;
                $sch['mobile'] = $data['mobile'];
                $sch['schedule_type'] = 4; //缴定
                $sch['status'] = 1;
                $sch['appoint_time'] = I("post.appoint_time");
                $sch['msg'] = I("post.msg");
                $sch['steward_id'] = $_SESSION['steward_id'];
                $sch['admin_type'] = C("admin_type_gj");
                $DSchedule = D("schedule");
                $result2 = $DSchedule->addOneSchedule($sch);
                if ( $result2 ) {
                    M("room")->where(array("id"=>$sch['room_id']))->save(array("status"=>1));//将房间修改成缴定状态
                    $this->success("缴定成功！",U("Home/Steward/houses"));
                } else {
                    //缴定失败也把帐号摧毁 待定
                     $this->error("缴定失败！");
                }
            }
        } else {
            $id = I('id');
            $DRomm = D("houses");
            $this->assign('room_info',$DRomm->getRoom($id));
            $this->display("order");
        }
    }
    /**
     * [入住-缴定后-待办-签约]
     **/
    public function order_checkin(){
        if ( !empty($_POST) ) {
            $DContract = D("contract");
            $result = $DContract->add($_POST);
            if ( $result['status'] ) {
                $DRoom = D("room");
                $DRoom->setRoomStatus(I("post.room_id"),2);
                $DRoom->setRoomPerson(I("post.room_id"),$result['account_id']);
                $DSchedule = D("schedule");
                $DSchedule->setFinish(I("post.schedule_id"));
                $this->success("签约成功~",U("Home/Steward/stewardtasks"));
            } else {
                $this->error("签约失败0。0");
            }
        } else {
            $id = I('schedule_id');//schedule_id待办id
            $DRoom = D("houses");
            $DSchedule = D("schedule");
            $schedule_info = $DSchedule->getScheduleByID($id);
            $this->assign("schedule_id",$id);
            $this->assign("account_id",$schedule_info['account_id']);
            $this->assign('schedule_info',$schedule_info);
            $this->assign('today',date("Y-m-d",time()));
            $this->assign('room_info',$DRoom->getRoom($schedule_info['room_id']));
            $this->display("order-checkin");
        }
    }

    /**
     * [入住-签约]
     **/
    public function checkin(){
        if ( !empty($_POST) ) {            
            $room_id = I("room_id");
            $house_code = M("room")->where(array("id"=>$room_id))->getField("house_code");
            $end_date = M("houses")->where(array("house_code"=>$house_code))->getField("end_date");//托管结束日
            if ( $_POST['endDate'] > $end_date ) {
                //判断租期结束日是否大于房间托管结束日
                $this->error("签约失败,租期结束日大于房间托管结束日");
            }

            $DContract = D("contract");
            $post = $_POST;

            $result = $DContract->add($post);
            if ( $result['id'] ) {
                //显示合同详情信息
                $this->success("合同生成成功!",U("Home/Steward/check_contract",array("id"=>$result['id'])));
                /*$this->success("合同生成成功,请到个人页面进行支付",U("Home/Steward/houses"));*/
            } else {
                $this->error("签约失败0。0");
            }
        } else {
            $id = I('id');//room_id
            $DRoom = D("houses");
            $this->assign('today',date("Y-m-d",time()));
            $this->assign('room_info',$DRoom->getRoom($id));
            $this->display("check-in");
        }
    }

    /**
    * [查看合同账单]
    **/
    public function check_contract(){
        $id = I("id");
        $contract_info = M("contract")->where(array("id"=>$id))->find();
        $rent_type = explode("_",$contract_info['rent_type']);
        $contract_info['rent_type'] = $rent_type;
        $this->assign("contract_info",$contract_info);
        $this->display("detail-contract");
    }


     /**
    * [发送立刻缴费]
    **/
    public function send_contract(){
        $id = I("id");
        $contract_info = M("contract")->where(array("id"=>$id))->find();//创蓝接口
        $mobile = M("account")->where(array("id"=>$contract_info['account_id']))->getField("mobile");

        Vendor('ChuanglanSms.chuanglanSmsApi');
        $clapi  = new \ChuanglanSmsApi();

        $msg = '欢迎你来到乐窝~请到个人页面进行支付 '.$_SERVER['HTTP_HOST'];
        $result = $clapi->sendSMS($mobile, $msg,'true');
        $result = $clapi->execResult($result);
        $send_time = date("Y-m-d H:i:s",time());
        M("sms_log")->add(array("mobile"=>$mobile,"message"=>$msg,"send_time"=>$send_time,"result"=>serialize($result)));
        if($result[1]==0){
            $this->success("发送成功");
        }
    }
    

    /**
     * [管家待办]
     **/
    public function stewardtasks(){
        $DSchedule = D("schedule");
        $schedule_list = $DSchedule->getScheduleBySteward($_SESSION['steward_id']);
        $this->assign('schedule_list',$schedule_list);
        $tf_count = $DSchedule->getScheduleCount($_SESSION['steward_id'],C("schedule_type_tf"));
        $zf_count = $DSchedule->getScheduleCount($_SESSION['steward_id'],C("schedule_type_zf"));
        $hf_count = $DSchedule->getScheduleCount($_SESSION['steward_id'],C("schedule_type_hf"));
        $jd_count = $DSchedule->getScheduleCount($_SESSION['steward_id'],C("schedule_type_jd"));
        
        $this->assign("tf_count",$tf_count);
        $this->assign("zf_count",$zf_count);
        $this->assign("hf_count",$hf_count);
        $this->assign("jd_count",$jd_count);
        $this->display('steward-tasks');
        $this->display("Steward/common/footer");
    }

    /**
    * [退房管家抄水电气]
    **/
    public function check_ammeter(){
        if ( !empty($_POST) ) {
            $schedule_id = I("schedule_id");
            $MSchedule = M("schedule");
            $schedule_info = $MSchedule->where(array("id"=>$schedule_id))->find();
            $data['account_id'] = $schedule_info['account_id'];
            $data['create_time'] = date("Y-m-d H:i:s",time());
            $data['mobile'] = $schedule_info['mobile'];
            $data['schedule_type'] = C("schedule_type_tf");
            $data['status'] = 2;//已经录入完水电气
            $data['room_id'] = $schedule_info['room_id'];
            $data['pay_account'] = $schedule_info['pay_account'];
            $data['pay_type'] = $schedule_info['pay_type'];
            $data['msg'] = $schedule_info['msg'];
            $data['is_break'] = $schedule_info['is_break'];
            $data['steward_id'] = $schedule_info['steward_id'];
            $data['admin_type'] = C("admin_type_cw");
            $data['check_out_type'] = I("check_out_type");
            $data['zS'] = I("zS");
            $data['zD'] = I("zD");
            $data['zQ'] = I("zQ");
            $data['roomD'] = I("roomD");
            $data['wx_fee'] = I("wx_fee");
            $data['wx_des'] = I("wx_des");

            //将租客申请的待办改成完成
            $MSchedule->where(array("id"=>$schedule_id))->save(array("is_finish"=>1));
            //插入一条新的待办
            $result = $MSchedule->add($data);
            if ( $result ) {
                $this->success("提交成功",U("Home/Steward/index"));
            } else {
                $this->error("提交失败");
            }
        } else {
            $schedule_id = I("schedule_id");

            $DSchedule = D("schedule");
            $schedule_info = $DSchedule->getScheduleByID($schedule_id);
            $this->assign("schedule_info",$schedule_info);

            $DAccount = D("account");
            $account_info = $DAccount->getAccountInfoById($schedule_info['account_id']);
            $this->assign("account_info",$account_info);

            $DRoom = D("room");
            $room_info = $DRoom->getRoom($schedule_info['room_id']);
            $this->assign("room_info",$room_info);

            $this->assign("schedule_id",$schedule_id);
            $this->display("check-ammeter");
        }
    }
}