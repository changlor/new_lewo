<?php
namespace Admin\Controller;
use Think\Controller;
class PayController extends Controller {
    public function __construct(){
        parent::__construct();
        if ( empty($_SESSION['username']) && ACTION_NAME != 'register') {
            header("Location:".U("Admin/Index/login"));
            die();
        }
    }
    /**
    * [日常账单]
    **/
    public function daily_bill(){
    	$MChargeBill = M("charge_bill");// 实例化User对象

    	/*$charge_bill_list = $DChargeBill->showDailyBillList();*/

        $count      = $MChargeBill->where(array("is_delete"=>0))->count();// 查询满足要求的总记录数

        $Page       = new \Think\Page($count,10);// 实例化分页类 传入总记录数和每页显示的记录数(25)

        $show       = $Page->show();// 分页显示输出

        $list       = $MChargeBill->where(array("is_delete"=>0))->order("id desc,create_time desc")->limit($Page->firstRow.','.$Page->listRows)->select();

        $DRoom = D("room");
        $DAccount = D("account");
        $DArea = D("area");
        $DContract = D("contract");
        foreach ($list AS $key=>$val) {
            $list[$key]['room_code'] = $DRoom->getRoomCodeById($val['room_id']);
            $list[$key]['bed_code'] = $DRoom->getBedCodeById($val['room_id']);
            $list[$key]['realname'] = $DAccount->getFieldById($val['account_id'],"realname");
            $list[$key]['mobile'] = $DAccount->getFieldById($val['account_id'],"mobile");
            $list[$key]['SDQtotal'] = $val['water_fee'] + $val['gas_fee'] + $val['energy_fee'] + $val['room_energy_fee'];
            $list[$key]['area_name'] = $DArea->getAreaInfoByCode($val['house_code']);
            $list[$key]['ht_start_date'] = $DContract->getContractStartDate($val['account_id'],$val['room_id']);
            $list[$key]['ht_end_date'] = $DContract->getContractEndDate($val['account_id'],$val['room_id']);
            $list[$key]['period'] = $DContract->getPeriod($val['account_id'],$val['room_id']);
            $list[$key]['deposit'] = $DContract->getDeposit($val['account_id'],$val['room_id']);
            $pay_type = C("pay_type");
            $list[$key]['pay_type_name'] = $pay_type[$val['pay_type']];
            //最迟缴费倒计时
            $startdate=strtotime($val['should_pay_date']);
            $enddate=strtotime(date("Y-m-d",time()));
            $count_down_days=round(($startdate-$enddate)/86400);
            $list[$key]['count_down_days'] = $count_down_days;
            switch ($val['type']) {
                case 1:
                    $list[$key]['type_name'] = "日常";
                    break;
                case 2:
                    $list[$key]['type_name'] = "退房";
                    break;
                case 3:
                    $list[$key]['type_name'] = "转房";
                    break;
                case 4:
                    $list[$key]['type_name'] = "换房";
                    break;
            }
        }

        $this->assign('charge_bill_list',$list);// 赋值数据集
        $this->assign('page',$show);// 赋值分页输出

    	/*$this->assign("charge_bill_list",$charge_bill_list);*/
    	$this->display("daily-bill");
    }

    /**
    * [修改账单支付状态]
    **/
    public function edit_pay(){
    	if ( !empty($_POST) ) {
    		$id = I('id');
    		$data['pay_type'] = I("pay_type");
    		$data['pay_time'] = I("pay_time");
    		$data['pay_money'] = I("pay_money");
    		$data['pay_log'] = I("pay_log");
    		$data['pay_status'] = 1;
    		$result = M("charge_bill")->where(array("id"=>$id))->save($data);
    		if ( !empty($result) ) {
    			$this->success("修改成功",U("Admin/Pay/daily_bill"));
    		} else {
    			$this->error("修改失败",U("Admin/Pay/daily_bill"));
    		}
    		
    	} else {
    		$id = I("id");
            $DChargeBill = D("charge_bill");
            $pay_info = $DChargeBill->getPayInfo($id);
            $this->assign("pay_info",$pay_info);
    		$this->assign("id",$id);
    		$this->assign("pay_type",C("pay_type"));
    		$this->display("edit-pay");
    	}	
    }
    /**
    * [合同账单]
    **/
    public function contract_bill(){
        $DContract = D("contract");
        $contract_list = $DContract->getContractList();
        $this->assign("contract_list",$contract_list);
        $this->display("contract-bill");
    }
    /**
    * [修改合同账单]
    **/
    public function edit_contract_pay(){
        if ( !empty($_POST) ) {
            $id = I('id');
            $MContract = M("contract");
            $account_id = $MContract->where(array("id"=>$id))->getField("account_id");
            $room_id = $MContract->where(array("id"=>$id))->getField("room_id");
            $data['pay_type'] = I("pay_type");
            $data['pay_date'] = I("pay_time");
            $data['pay_log'] = I("pay_log");
            $data['pay_status'] = 1;
            $result = $MContract->where(array("id"=>$id))->save($data);

            if ( $result ) {
                $DRoom = D("room");
                $DRoom->setRoomStatus($room_id,2);
                $DRoom->setRoomPerson($room_id,$account_id);
                $this->success("修改成功",U("Admin/Pay/contract_bill"));
            } else {
                $this->error("修改失败",U("Admin/Pay/contract_bill"));
            }
        } else {
            $id = I("id");
            $DChargeBill = D("charge_bill");
            $pay_info = $DChargeBill->getPayInfo($id);
            $this->assign("pay_info",$pay_info);
            $this->assign("id",$id);
            $this->assign("pay_type",C("pay_type"));
            $this->display("edit-contract-pay");
        }
    } 

    public function delete_contract(){
        $id = I("id");
        $result = M("contract")->where(array("id"=>$id))->save(array("is_delete"=>1));
        if ( $result ) {
            $this->success("删除成功!",U("Admin/Pay/contract_bill"));
        } else {
            $this->error("删除失败!",U("Admin/Pay/contract_bill"));
        }
    }

    
    public function delete_bill(){
        $id = I("id");
        $result = M("charge_bill")->where(array("id"=>$id))->save(array("is_delete"=>1));
        if ( $result ) {
            $this->success("删除成功!",U("Admin/Pay/daily_bill"));
        } else {
            $this->error("删除失败!",U("Admin/Pay/daily_bill"));
        }
    }
}