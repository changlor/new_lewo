<?php
namespace Admin\Model;
use Think\Model;
/**
* [房源数据层]
*/
class HousesModel extends Model{
	/**
	 * [获取房源列表]
	 **/
	public function getHousesList($where){
		$year = date("Y",time());
		$month = date("m",time());
		$MSteward = M('admin_user');
		$MRoom = M("room");
		$MArea = M("area");
		$MCharge_bill = M("charge_bill");
		$MChargeHouse = M("charge_house");
		$houses = $this->field("id,area_id,house_code,type,steward_id,create_time,create_time,floor,door_no,building,region_id")->where($where)->select();
		$MAmmeterhouse = M("ammeter_house");
		foreach($houses AS $key=>$val){
			$yz_count = $MRoom->where(array('house_code'=>$val['house_code'],'status'=>C('room_yz')))->count();//已租数量
			$houses[$key]['area_name'] = $MArea->where(array('id'=>$val['area_id']))->getField("area_name");
			if ($yz_count>0) {
				$houses[$key]['is_checkin'] = true;
			} else {
				$houses[$key]['is_checkin'] = false;
			}
			$is_send = $MChargeHouse->where(array("house_id"=>$val['id'],"input_year"=>$year,"input_month"=>$month,"is_send"=>1))->find();
			if ( !empty($is_send) ){
				$houses[$key]['is_send'] = true;
			} else {
				$houses[$key]['is_send'] = false;
			}
			$is_typein = $MAmmeterhouse->where(array("house_id"=>$val['id'],"input_year"=>$year,"input_month"=>$month,"status"=>1))->find();
			if ( !empty($is_typein) ){
				$houses[$key]['is_typein'] = true;
			} else {
				$houses[$key]['is_typein'] = false;
			}
			$steward_info = array();
			$steward_info = $MSteward->where(array('id'=>$val['steward_id']))->find();
			$houses[$key]['steward_nickname'] = $steward_info['nickname'];
			$houses[$key]['steward_mobile'] = $steward_info['mobile'];

			$where['house_code'] = $val['house_code'];
			$where['input_year'] = $year;
			$where['input_month'] = $month;
			$total_count = $MCharge_bill->where($where)->count();
			$where['is_send'] = 1;
			$sended_count = $MCharge_bill->where($where)->count();
			$houses[$key]['total_count'] = $total_count;//总数量
			$houses[$key]['sended_count'] = $sended_count;//已发送数量
		}
		return $houses;
	}

	/**
	 * [获取房屋信息]
	 **/
	public function getHouse($house_code){
		return $this->where(array('house_code'=>$house_code))->find();
	}
	/**
	 * [获取房屋信息]
	 **/
	public function getHouseById($house_id){
		return $this->where(array('id'=>$house_id))->find();
	}

	/**
	 * [获取全部房间/床位信息]
	 **/
	public function getAllRoom(){
		$MRoom = M('room');
		return $MRoom->select();
	}

	/**
	 * [获取房源中的房间/床位]
	 **/
	public function getRoomList($house_code){
		$MRoom = M("room");
		$roomList = $MRoom->where(array('house_code'=>$house_code))->select();
		$DContract = M("contract");
		$DAccount = D("account");
		foreach($roomList AS $key=>$val){		
			$account_info = $DAccount->getInfoById($val['account_id']);
			$contract_list = $DContract->where(array("account_id"=>$val['account_id'],"room_id"=>$val['id'],"pay_status"=>1,"contract_status"=>1))->find();
			$roomList[$key]['realname'] = $account_info['realname'];
			$roomList[$key]['mobile'] = $account_info['mobile'];
			$roomList[$key]['contract_rent'] = $contract_list['rent'];
			if (!empty($val['bed_code'])) {
				$roomList[$key]['rent_out_type'] = 'bed';
				$roomList[$key]['rent_out_type_name'] = '床';
			} else {
				$roomList[$key]['rent_out_type'] = 'room';
				$roomList[$key]['rent_out_type_name'] = '间';
			}
		}
		return $roomList;
	}

	/**
	 * [获取房间/床位信息]
	 **/
	public function getRoom($id){
		$MRoom = M("room");
		return $MRoom->where(array('id'=>$id))->find();
	}
	/**
	 * [删除房间/床位]
	 **/
	public function deleteRoom($id){
		$MRoom = M("room");
		return $MRoom->where(array('id'=>$id))->delete();
	}
	/**
	 * [获取房屋编码]
	 **/
	public function getHouseCodeById($hosue_id){
		return $this->where(array('id'=>$hosue_id))->getField("house_code");
	}
	/**
	 * [获取房屋ID]
	 **/
	public function getHouseIdByCode($house_code){
		return $this->where(array('house_code'=>$house_code))->getField("id");
	}
	/**
	* [查该该房屋租了多少人][房屋总人数]
	**/
	public function getPersonCountByCode($house_code){
		return M("room")->where(array("status"=>2,"house_code"=>$house_code))->count();
	}
	/**
	* [查看该房屋有多少间房间]
	**/
	public function getRoomCountByCode($house_code){
		$room_count = M("room")->where(array("house_code"=>$house_code,"room_type"=>1))->count();

		return $room_count;
	}
	/**
	* [查看该房屋有多少间床位]
	**/
	public function getBedCountByCode($house_code){
		$bed_count = M("room")->where(array("house_code"=>$house_code,"room_type"=>2))->count();

		return $bed_count;
	}
	/**
	* [查该该房间租了多少人]
	**/
	public function getRoomPersonCountByCode($room_code){
		return M("room")->where(array("status"=>2,"room_code"=>$room_code))->count();
	}
	/**
	* [获取该房间某年某月的总人日]
	**/
	public function getPersonDayCount($house_code,$year,$month){
		$date = $year."-".$month;
		//上一个月
        $lastDate = date("Y-m",strtotime($year."-".$month."- 1 month"));
        $lastYear = date("Y",strtotime($lastDate));
        $lastMonth = date("m",strtotime($lastDate));
		$DContract = D("contract");
		//获取与该月有关联的房间
		$contract_list = $DContract->getContractListByDateForDailyBill($house_code,$year,$month);
		$sum_person_day = 0;
		foreach ($contract_list AS $key=>$val) {
			$ht_start_date = $val['start_time']; //合同开始日
			$ht_end_date = $val['end_time']; //合同开始日
			$ht_actual_end_time = $val['actual_end_time'];//实际退房日
			//人日 需要计算租客申请的日数
	        $ht_person = $val['person_count'];//合同人数
	        //判断租客是否该月入住
	        $is_start_date = $DContract->bothTimeIsEqual($ht_start_date,$date);
	        //判断租客是否该月退房
	        $is_end_date = $DContract->bothTimeIsEqual($ht_actual_end_time,$date);

	        if ( $is_start_date ) {
	            //是这个月入住则，人日获取的是，租期开始到月末的日数
	            $firstday = date('Y-m-01', strtotime($year."-".$month)); //该月第一天
	            $lastday = date('Y-m-d', strtotime("$firstday +1 month -1 day")); //该月最后一天
	            $person_day = round((strtotime($lastday)-strtotime($ht_start_date))/86400)+1;
	            $person_day*=$ht_person;
	        } else {
	            //退房了 判断是否这个月退的
	            $ht_actual_end_year = date("Y",strtotime($ht_actual_end_time));
	            $ht_actual_end_month = date("m",strtotime($ht_actual_end_time));
	            if ( $ht_actual_end_time != 0 && $year == $ht_actual_end_year && $month == $ht_actual_end_month) {
	                //这个月就是退房的月数 那么这个月的人日就是到这一天
	                $person_day = date("d",strtotime($ht_actual_end_time));
	            } else {
	                //不是这个月入住也不是这个月退房的，则获取这个月的日数
	                $person_day = date("t",strtotime($year."-".$month));
	            }   
	        }
	        $person_day*=$ht_person;
	        $sum_person_day += $person_day;
		}	
		return $sum_person_day;
	}
	/**
	* [针对退房-获取该房间的总人日]
	**/
	/**
	* [获取该房间某年某月的总人日]
	* @param house_code 房间编号
	* @param appoint_time 约定时间
	**/
	public function TFgetPersonDayCount($house_code,$appoint_time){
		$appoint_year = date("Y",strtotime($appoint_time));
		$appoint_month = date("m",strtotime($appoint_time));
		$appoint_day = date("d",strtotime($appoint_time));
		$DContract = D("contract");
		//获取与该月有关联的房间
		$contract_list = $DContract->getContractListByDateForDailyBill($house_code,$appoint_year,$appoint_month);

		$sum_person_day = 0;
		foreach ($contract_list AS $key=>$val) {
			$ht_start_date = $val['start_time']; //合同开始日
			$ht_end_date = $val['end_time']; //合同结束日
			$ht_actual_end_time = $val['actual_end_time'];//实际退房日
			//人日 需要计算租客申请的日数
	        $ht_person = $val['person_count'];//合同人数
	        //判断租客是否当月入住
	        $is_start_date = $DContract->bothTimeIsEqual($ht_start_date,$appoint_time);
	        //判断租客是否当月退房
	        $is_end_date = $DContract->bothTimeIsEqual($ht_actual_end_time,$appoint_time);

	        if ( $is_start_date ) {
	        	if ( $is_end_date ) {
	        		//合同开始和实际退房的月份一样，获取两者之间的日数
	        		$lastday = date('Y-m-d', strtotime($ht_actual_end_time)); //退房时间
		            $person_day = round((strtotime($lastday)-strtotime($ht_start_date))/86400)+1;
		            $person_day*=$ht_person;
	        	} else {
	        		//是这个月入住则，人日获取的是，租期开始到月末的日数
		            $lastday = date('Y-m-d', strtotime($appoint_time)); //约定时间
		            $person_day = round((strtotime($lastday)-strtotime($ht_start_date))/86400)+1;
		            $person_day*=$ht_person;
	        	}
	        } else {
	            if ( $is_end_date ) {
	            	//这个月就是退房的月数 那么这个月的人日就是到这一天
	            	//判断实际退房和退房约定时间的大小，取小的那个
	            	if ( strtotime($appoint_time) <= strtotime($ht_actual_end_time) ) {
	            		$person_day = date("d",strtotime($appoint_time));
	            	} else {
	            		$person_day = date("d",strtotime($ht_actual_end_time));
	            	}
	            } else {
	            	//不是这个月入住也不是这个月退房的，则获取这个月的日数
	            	// 因为是退房，所以获取是约定时间的日数
	                $person_day = date("d",strtotime($appoint_time));
	            }
	        }
	        $person_day*=$ht_person;
	        $sum_person_day += $person_day;

		}	
		return $sum_person_day;
	}

	/**
	* [生成账单 要获取公共区域的费用则要获取总的房间电费]
	* @param house_code 房间编号
	* @param year 年
	* @param month 月
	* @param energy_stair 阶梯算法
	* @return 总电费
	**/
	public function get_room_total_energy_fee($house_code,$year,$month,$energy_stair){
		$lastDate = date("Y-m",strtotime($year."-".$month) - 1);
        $lastYear = date("Y",strtotime($lastDate));
        $lastMonth = date("m",strtotime($lastDate));	
		$DAmmeterRoom = D("ammeter_room");
        $MContract = M("contract");
        $DContract = D("contract");
        $MRoom = M("room");
		$room_list = $MRoom->where(array("house_code"=>$house_code))->select();

		$room_total_energy_fee = 0;
		foreach( $room_list AS $key=>$val ){
			$ammeter_room = $DAmmeterRoom->getAmmeterRoomByRoomId($val['id'],$year,$month);
            $last_ammeter_room = $DAmmeterRoom->getAmmeterRoomByRoomId($val['id'],$lastYear,$lastMonth);
            
            if ( count($last_ammeter_room)==0 ) {
                //上个月没有水电气信息则获取合同上的初始化电表
                $roomD = $MContract->where(array("account_id"=>$val['account_id'],"room_id"=>$val['room_id']))->getField("roomD");
                $last_ammeter_room['room_energy'] = !empty($roomD)?$roomD:0;
            }
            $add_roomD = $ammeter_room['room_energy'] - $last_ammeter_room['room_energy'];

            //房间电费
            $room_energy_fee = get_energy_fee($add_roomD,$energy_stair);
            $room_total_energy_fee += $room_energy_fee;
		}
		return $room_total_energy_fee;
	}
}

?>